---
import InfoHeader from "@components/general/InfoHeader.astro"

type NavLink = {
  name: string
  href: string
}

type NavWithMoreLinks = {
  name: string
  links: NavLink[]
}

const navLinks: NavLink[] = [
  {
    name: 'Inicio',
    href: '/',
  },
  {
    name: 'Sobre Nosotros',
    href: '#about-us',
  },
  {
    name: 'Ubicación',
    href: '#ubication',
  },
]

const navWithMoreLinks: NavWithMoreLinks[] = [
  {
    name: 'Servicios',
    links: [
      {
        name: 'Todos',
        href: '#all',
      },
      {
        name: 'Reparaciónes',
        href: '#fixes',
      },
      {
        name: 'Cuadros Personalizados',
        href: '#frames-top',
      },
      {
        name: 'Ver Productos',
        href: '#products-top',
      },
    ],
  },
]
---

<header id="header" class="max-w-screen-xl mx-auto px-0 xl:p-0 flex flex-col">
  <InfoHeader />

  <section
    class="flex items-center justify-between gap-2 h-16 md:relative fixed z-50 w-full px-4 xl:px-0 bg-local_background"
  >
    <a href="/" class="text-local_title">
      <h1 class="text-xl font-bold">Now Technology</h1>
    </a>

    <nav class="hidden md:flex">
      <ul class="flex gap-4 text-sm font-medium text-local_subtitle">
        {
          navLinks.map(({ name, href }: NavLink) => (
            <li class="hover:text-local_accent">
              <a href={href}>{name}</a>
            </li>
          ))
        }
        {
          navWithMoreLinks.map(({ name, links }: NavWithMoreLinks) => (
            <li class="relative group/list">
              <div class="flex gap-1">
                Servicios
                <span>
                  <svg
                    class="group-hover/list:rotate-180 transition-transform"
                    xmlns="http://www.w3.org/2000/svg"
                    width="17"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-down"
                  >
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M6 9l6 6l6 -6" />
                  </svg>
                </span>
              </div>

              <ul class="absolute hidden group-hover/list:flex flex-col gap-2 w-max py-3 z-30">
                {links.map(({ name, href }: NavLink) => (
                  <li class="hover:text-local_accent">
                    <a href={href}>{name}</a>
                  </li>
                ))}
              </ul>
            </li>
          ))
        }
      </ul>
    </nav>

    <nav
      id="nav"
      class="hidden md:hidden absolute top-16 right-0 left-0 bg-local_background_2 z-50 w-full text-right"
    >
      <ul
        class="flex flex-col gap-4 text-sm font-medium text-local_text_2 px-4 py-6"
      >
        {
          navLinks.map(({ name, href }: NavLink) => (
            <li class="nav-item text-lg">
              <a href={href}>{name}</a>
            </li>
          ))
        }
        {
          navWithMoreLinks.map(({ name, links }: NavWithMoreLinks) => (
            <li class="flex flex-col gap-2 text-lg border-t pt-2">
              <div class="flex flex-row-reverse text-local_text">
                <div class="flex gap-1 items-center">Servicios</div>
              </div>

              <ul class="flex flex-col gap-2 pr-2 text-base">
                {links.map(({ name, href }: NavLink) => (
                  <li class="nav-item">
                    <a href={href}>{name}</a>
                  </li>
                ))}
              </ul>
            </li>
          ))
        }
      </ul>
    </nav>

    <div class="flex gap-4">
    <a href="/all_products"
      class="md:gap-2 gap-1 text-local_text_1 font-medium flex items-center"
    >
      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="currentColor"><path d="M200-80q-33 0-56.5-23.5T120-160v-451q-18-11-29-28.5T80-680v-120q0-33 23.5-56.5T160-880h640q33 0 56.5 23.5T880-800v120q0 23-11 40.5T840-611v451q0 33-23.5 56.5T760-80H200Zm0-520v440h560v-440H200Zm-40-80h640v-120H160v120Zm200 280h240v-80H360v80Zm120 20Z"/></svg>

      <p class="md:text-md text-sm">Productos</p>
      </a>

      <button class="flex md:hidden" id="button-toggle">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="icon icon-tabler icons-tabler-outline icon-tabler-menu-2"
          ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
            d="M4 6l16 0"></path><path d="M4 12l16 0"></path><path
            d="M4 18l16 0"></path></svg
        >
      </button>
    </div>
  </section>
</header>

<script>
  const $ = (selector: string) => document.querySelector(selector)
  const $$ = (selector: string) => document.querySelectorAll(selector)

  const buttonToggle = $('#button-toggle')
  const nav = $('#nav') as HTMLElement
  const navItems = $$('.nav-item') as NodeListOf<HTMLElement>

  navItems.forEach((item: HTMLElement) => {
    item.addEventListener('click', toggleMenu)
  })

  if (buttonToggle instanceof HTMLButtonElement) {
    buttonToggle.addEventListener('click', toggleMenu)
  }

  function toggleMenu() {
    if (nav.classList.contains('hidden')) {
      nav.classList.remove('hidden')
    } else {
      nav.classList.add('hidden')
    }
  }
</script>
